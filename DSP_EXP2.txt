
alpha = 1 + mod(301, 3);


t = linspace(0, 1/alpha, 1000); % Adjust the number of points for a smoother plot if needed


waveform_a = alpha * cos(5 * alpha * 2 * pi * t);
waveform_b = (alpha/2) * cos(6 * alpha * 2 * pi * t);
waveform_c = (alpha/4) * cos(10 * alpha * 2 * pi * t);


figure;
plot(t, waveform_a, 'b', t, waveform_b, 'r', t, waveform_c, 'g');
title('Waveforms with Different Amplitudes and Frequencies');
xlabel('Time (s)');
ylabel('Amplitude');
legend('Amplitude: \alpha, Frequency: 5\alpha Hz', 'Amplitude: \alpha/2, Frequency: 6\alpha Hz', 'Amplitude: \alpha/4, Frequency: 10\alpha Hz');
grid on;



sum_waveform = waveform_a + waveform_b + waveform_c;


figure;
plot(t, sum_waveform, 'm');
title('Summation of All Three Waveforms');
xlabel('Time (s)');
ylabel('Amplitude');
legend('Sum of Waveforms');
grid on;








alpha = 1 + mod(301, 3);


t = linspace(0, 1/alpha, 1000);


waveform_a = alpha * cos(5 * alpha * 2 * pi * t);
waveform_b = (alpha/2) * cos(6 * alpha * 2 * pi * t);
waveform_c = (alpha/4) * cos(10 * alpha * 2 * pi * t);
sum_waveform = waveform_a + waveform_b + waveform_c;


abs_sum_waveform = abs(sum_waveform);

Fs_a = 14 * alpha;
Fs_b = 2 * max([5*alpha, 6*alpha, 10*alpha]); % Nyquist rate
Fs_c = 3 * alpha; % Aliasing rate


sampled_signal_a = abs_sum_waveform(1 : Fs_a : end);
sampled_signal_b = abs_sum_waveform(1 : Fs_b : end);
sampled_signal_c = abs_sum_waveform(1 : Fs_c : end);


t_sampled_a = t(1 : Fs_a : end);
t_sampled_b = t(1 : Fs_b : end);
t_sampled_c = t(1 : Fs_c : end);


figure;


subplot(3, 1, 1);
stem(t_sampled_a, sampled_signal_a, 'b');
title('Sampled Signal at Fs = 14\alpha samples/second');
xlabel('Time (s)');
ylabel('Amplitude');
grid on;


subplot(3, 1, 2);
stem(t_sampled_b, sampled_signal_b, 'r');
title('Sampled Signal at Nyquist Rate');
xlabel('Time (s)');
ylabel('Amplitude');
grid on;

subplot(3, 1, 3);
stem(t_sampled_c, sampled_signal_c, 'g');
title('Sampled Signal at Aliasing Rate');
xlabel('Time (s)');
ylabel('Amplitude');
grid on;

sgtitle('Discrete-Time Waveforms at Different Sampling Frequencies');







alpha = 1 + mod(301, 3);


t = linspace(0, 1/alpha, 1000);


waveform_a = alpha * cos(5 * alpha * 2 * pi * t);
waveform_b = (alpha/2) * cos(6 * alpha * 2 * pi * t);
waveform_c = (alpha/4) * cos(10 * alpha * 2 * pi * t);
sum_waveform = waveform_a + waveform_b + waveform_c;


abs_sum_waveform = abs(sum_waveform);


Fs_a = 14 * alpha;
Fs_b = 2 * max([5*alpha, 6*alpha, 10*alpha]);
Fs_c = 3 * alpha;

sampled_signal_a = abs_sum_waveform(1 : Fs_a : end);
sampled_signal_b = abs_sum_waveform(1 : Fs_b : end);
sampled_signal_c = abs_sum_waveform(1 : Fs_c : end);


t_interp = linspace(0, max(t), length(abs_sum_waveform));
interp_signal_a = interp1(t_sampled_a, sampled_signal_a, t_interp, 'linear');
interp_signal_b = interp1(t_sampled_b, sampled_signal_b, t_interp, 'linear');
interp_signal_c = interp1(t_sampled_c, sampled_signal_c, t_interp, 'linear');


figure;


subplot(4, 1, 1);
plot(t, abs_sum_waveform, 'k');
title('Original Signal');
xlabel('Time (s)');
ylabel('Amplitude');
grid on;


subplot(4, 1, 2);
plot(t_interp, interp_signal_a, 'b');
title('Interpolated Signal (Fs = 14\alpha samples/second)');
xlabel('Time (s)');
ylabel('Amplitude');
grid on;


subplot(4, 1, 3);
plot(t_interp, interp_signal_b, 'r');
title('Interpolated Signal (Nyquist Rate)');
xlabel('Time (s)');
ylabel('Amplitude');
grid on;


subplot(4, 1, 4);
plot(t_interp, interp_signal_c, 'g');
title('Interpolated Signal (Aliasing Rate)');
xlabel('Time (s)');
ylabel('Amplitude');
grid on;

sgtitle('Linearly Interpolated Signals at Different Sampling Frequencies');













t = linspace(0, 1/alpha, 1000);


waveform_a = alpha * cos(5 * alpha * 2 * pi * t);
waveform_b = (alpha/2) * cos(6 * alpha * 2 * pi * t);
waveform_c = (alpha/4) * cos(10 * alpha * 2 * pi * t);
sum_waveform = waveform_a + waveform_b + waveform_c;


abs_sum_waveform = abs(sum_waveform);


Fs_a = 14 * alpha;
Fs_b = 2 * max([5*alpha, 6*alpha, 10*alpha]);
Fs_c = 3 * alpha;


fft_a = fft(abs_sum_waveform);
fft_b = fft(abs_sum_waveform);
fft_c = fft(abs_sum_waveform);

freq_a = linspace(0, Fs_a, length(fft_a));
freq_b = linspace(0, Fs_b, length(fft_b));
freq_c = linspace(0, Fs_c, length(fft_c));


figure;


subplot(3, 1, 1);
plot(freq_a, abs(fft_a), 'b');
title('Energy Density Spectrum at Fs = 14\alpha samples/second');
xlabel('Frequency (Hz)');
ylabel('Energy');
grid on;

subplot(3, 1, 2);
plot(freq_b, abs(fft_b), 'r');
title('Energy Density Spectrum at Nyquist Rate');
xlabel('Frequency (Hz)');
ylabel('Energy');
grid on;

% Subplot (c)
subplot(3, 1, 3);
plot(freq_c, abs(fft_c), 'g');
title('Energy Density Spectrum at Aliasing Rate');
xlabel('Frequency (Hz)');
ylabel('Energy');
grid on;

sgtitle('Energy Density Spectra for Different Sampling Frequencies');


fprintf('For 3(a) and 3(c), the frequency 10α Hz is aliased to %f Hz.\n', mod(10*alpha, Fs_a));
fprintf('For 3(a) and 3(c), the frequency 5α Hz is aliased to %f Hz.\n', mod(5*alpha, Fs_a));


% Q 2
frequencies = [261.63, 293.66, 329.63, 349.23, 392.00, 440.00, 493.88, 523.25];


note_duration = 0.5;


concatenated_signal = [];

for freq = frequencies
    t = linspace(0, note_duration, round(44100 * note_duration)); % 44100 Hz sampling rate
    tone = sin(2 * pi * freq * t);
    concatenated_signal = [concatenated_signal, tone];
end


audiowrite('sequence_44100Hz.wav', concatenated_signal, 44100);


t_22050 = linspace(0, note_duration, round(22050 * note_duration));
t_11025 = linspace(0, note_duration, round(11025 * note_duration));

concatenated_signal_22050 = [];
concatenated_signal_11025 = [];

for freq = frequencies
    tone_22050 = sin(2 * pi * freq * t_22050);
    concatenated_signal_22050 = [concatenated_signal_22050, tone_22050];

    tone_11025 = sin(2 * pi * freq * t_11025);
    concatenated_signal_11025 = [concatenated_signal_11025, tone_11025];
end


audiowrite('sequence_22050Hz.wav', concatenated_signal_22050, 22050);
audiowrite('sequence_11025Hz.wav', concatenated_signal_11025, 11025);





% Q 3

original_audio = audioread('Track00α.wav');


sampling_rates = [22050, 11025, 5512.5]; % Half, 1/3rd, 1/6th of the original rate


for i = 1:length(sampling_rates)
    new_sampling_rate = sampling_rates(i);
    resampled_audio = resample(original_audio, new_sampling_rate, 44100);
    audiowrite(sprintf('resampled_%dHz.wav', new_sampling_rate), resampled_audio, new_sampling_rate);
end


upsampling_factor = 2;


upsampled_audio = resample(original_audio, upsampling_factor, 1);
audiowrite(sprintf('upsampled_%dx.wav', upsampling_factor), upsampled_audio, 44100);